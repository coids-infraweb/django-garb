input[type="checkbox"] {
    width: 14px;
    border: _(bd);
    height: 14px;
    outline: 0;
    box-sizing: border-box;
    border-radius: 0px;
    -webkit-border-radius: 0px;
    -moz-border-radius: 0px;
    cursor: pointer;
    
}

input[type="text"],
input[type="number"],
input[type="url"],
input[type="email"],
input[type="search"],
input[type="password"],
textarea {
    background: _(cInput);
    height: 40px;
    border: _(bd);
    -webkit-border-radius: _(bdRadius);
    -moz-border-radius: _(bdRadius);
    border-radius: _(bdRadius);
    color: _(cText);
    font-size: 15px;
    -webkit-transition: all 0.4s ease;
    -o-transition: all 0.4s ease;
    -moz-transition: all 0.4s ease;
    transition: all 0.4s ease;
    padding: 0 0 0 10px;
    width: 100%;

    &::-webkit-input-placeholder {
        color: #999;
    }

    &:-moz-placeholder {
        color: #999;
        opacity: 1;
    }

    &::-moz-placeholder {
        color: #999;
        opacity: 1;
    }

    &:-ms-input-placeholder {
        color: #999;
        color: #999;
    }

    &:focus {
        -webkit-box-shadow: 0px 1px 5px 0px rgba(0, 0, 0, 0.15);
        -moz-box-shadow: 0px 1px 5px 0px rgba(0, 0, 0, 0.15);
        box-shadow: 0px 1px 5px 0px rgba(0, 0, 0, 0.15);
        -webkit-transform: translateY(-3px);
        -moz-transform: translateY(-3px);
        -ms-transform: translateY(-3px);
        -o-transform: translateY(-3px);
        transform: translateY(-3px);
        border-color: _(cPrimary);
    }

    &:disabled {
        cursor: not-allowed;
    }
}

textarea {
    height: calc(40px * 3);
}

select{
    -webkit-appearance: none;
    border-radius: _(bdRadius);
    border: _(bd);
    display: inline-block;
    font-size: 1rem;
    height: calc(1.5em + .75rem + 4px);
    padding: 0 30px 0 10px;
    vertical-align: middle;
    color: _(cText);
    background: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 5'%3e%3cpath fill='%23343a40' d='M2 0L0 2h4zm0 5L0 3h4z'/%3e%3c/svg%3e") right 0.4rem center/8px 10px no-repeat _(cInput);
    transition: all 0.4s ease;
    width: 100%;

    &:focus {
        -webkit-box-shadow: 0px 1px 5px 0px rgba(0, 0, 0, 0.15);
        -moz-box-shadow: 0px 1px 5px 0px rgba(0, 0, 0, 0.15);
        box-shadow: 0px 1px 5px 0px rgba(0, 0, 0, 0.15);
        -webkit-transform: translateY(-3px);
        -moz-transform: translateY(-3px);
        -ms-transform: translateY(-3px);
        -o-transform: translateY(-3px);
        transform: translateY(-3px);
        border-color: _(cPrimary);
    }
}

select.filtered {
        height: 250px;
        border-top-left-radius: 0 ;
        border-top-right-radius: 0 ;
}

label.required:before {
    content: '*';
    display: inline-block;
    vertical-align: middle;
    height: 26px;
    font-size: 0.8em;
    color: _(erro);
}

input[type='checkbox'],
input[type='radio'] {
    --active: #275EFE;
    --active-inner: #fff;
    --focus: 2px rgba(39, 94, 254, .3);
    --border: #BBC1E1;
    --border-hover: #275EFE;
    --disabled: #F6F8FF;
    --disabled-inner: #E1E6F9;
    -webkit-appearance: none;
    -moz-appearance: none;
    height: 18px;
    outline: none;
    display: inline-block;
    vertical-align: top;
    position: relative;
    margin: 0;
    cursor: pointer;
    border: _(bd);
    background: _(cInput);
    transition: _(cInput) .3s, border-color .3s, box-shadow .2s;
    width: 18px;
    &:focus {
        border-color: _(cPrimary);
    }

    &:after {
        content: '';
        display: block;
        left: 0;
        top: 0;
        position: absolute;
        transition: transform .3s  ease, opacity .2s;
    }

    &:checked {
        background: _(cPrimary);
        border-color: _(cPrimary);
        transition: transform .6s cubic-bezier(.2, .85, .32, 1.2), opacity 3s;
    }

    &:disabled {
        background: _(cTextOff);
        cursor: not-allowed;
        opacity: .9;

        &:checked {
            background-color: _(cTextOff);
            border: _(bd);
        }

        &+label {
            cursor: not-allowed;
        }
    }

    &:hover {
        &:not(:checked) {
            &:not(:disabled) {
                border-color: _(cPrimary);
            }
        }
    }

    &:after {
        opacity: 0;
    }
    &:checked:after {
        opacity: 1;
    }

    &+label {
        font-size: 14px;
        line-height: 18px;
        display: inline-block;
        vertical-align: top;
        cursor: pointer;
        margin-left: 4px;
    }
}

input[type='checkbox'] {
        border-radius: _(bdRadius);
        &:after {
            width: 5px;
            height: 9px;
            border: 2px solid _(cTextContrast);
            border-top: 0;
            border-left: 0;
            left: 6px;
            top: 3px;
            transform: rotate(10deg);
        }

        &:checked:after {
            transform: rotate(43deg);
        }
}

.form-row-checkbox-read {
    padding: 5px;
}

.form-row-checkbox {
    label {
        margin-top: 5px;
        padding: 0 0 0px 5px;
    }
    input[type='checkbox'] {
        min-width: 38px;
        height: 21px;
        border-radius: 11px;
        margin-top: 5px;
        
        &:after {
            border: none;
            left: 2px;
            top: 2px;
            border-radius: 50%;
            width: 15px;
            height: 15px;
            background: _(backgroundColor);
            transform: translateX(0);
            opacity: 1;
        }
        &:checked:after {
            background-color: _(cTextContrast);
            transform: translateX(17px);
        }

        &:disabled {
            &:not(:checked) {
                &:after {
                    opacity: .6;
                }
            }
        }
    }
}

input[type='radio'] {
    border-radius: 50%;

    &:after {
        width: 19px;
        height: 19px;
        border-radius: 50%;
        background: _(backgroundColor);
        opacity: 0;
        transform: scale(.7);
    }
    &:checked:after {
        transform: scale(.5);
    }
}

input.is-invalid, select.is-invalid ~ .dropdown-toggle, input.has-error{
    @include errors();
    &:focus {
        @include errors();
    }
}

.button_click {
    opacity:.5;
}